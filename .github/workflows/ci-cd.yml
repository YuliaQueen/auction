name: CI/CD

on:
  push:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Build and push Docker images
        run: |
          IMAGE_TAG="${GITHUB_REF##*/}-${{ github.run_number }}"
          if [ "$IMAGE_TAG" = "-${{ github.run_number }}" ]; then
            IMAGE_TAG="latest"
          fi
          LOWERCASE_REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          REGISTRY="${{ env.REGISTRY }}/${LOWERCASE_REPO}"

          docker build --pull --file=gateway/docker/production/nginx/Dockerfile --tag=${REGISTRY}-gateway:${IMAGE_TAG} gateway/docker
          docker build --pull --file=frontend/docker/production/nginx/Dockerfile --tag=${REGISTRY}-frontend:${IMAGE_TAG} frontend
          docker build --pull --file=api/docker/production/php-fpm/Dockerfile --tag=${REGISTRY}-api-php-fpm:${IMAGE_TAG} api
          docker build --pull --file=api/docker/production/nginx/Dockerfile --tag=${REGISTRY}-api:${IMAGE_TAG} api

          docker push ${REGISTRY}-gateway:${IMAGE_TAG}
          docker push ${REGISTRY}-frontend:${IMAGE_TAG}
          docker push ${REGISTRY}-api-php-fpm:${IMAGE_TAG}
          docker push ${REGISTRY}-api:${IMAGE_TAG}

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        env:
          GH_PAT: ${{ secrets.PAT }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          envs: GH_PAT
          script: |
            # Изменяем формирование IMAGE_TAG
            IMAGE_TAG="${GITHUB_REF##*/}-${{ github.run_number }}"
            if [ "$IMAGE_TAG" = "-${{ github.run_number }}" ]; then
              IMAGE_TAG="latest"
            fi

            # Изменяем формирование REGISTRY
            LOWERCASE_REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
            REGISTRY="${{ env.REGISTRY }}/${LOWERCASE_REPO}"

            DEPLOY_DIR="/home/deploy/apps/site_${{ github.run_number }}"
            mkdir -p $DEPLOY_DIR
            cd $DEPLOY_DIR

            echo "COMPOSE_PROJECT_NAME=auction" > .env
            echo "REGISTRY=${REGISTRY}" >> .env
            echo "IMAGE_TAG=${IMAGE_TAG}" >> .env

            echo "Попытка получить содержимое файла через GitHub API..."
            curl -H "Authorization: token $GH_PAT" \
                 -H "Accept: application/vnd.github.v3.raw" \
                 -o docker-compose-production.yml \
                 -L "https://api.github.com/repos/${{ github.repository }}/contents/docker-compose-production.yml"

            echo "Содержимое файла docker-compose-production.yml:"
            cat docker-compose-production.yml

            echo "Содержимое файла .env:"
            cat .env

            echo "Проверка конфигурации Docker Compose..."
            docker-compose -f docker-compose-production.yml config

            if [ $? -eq 0 ]; then
              echo "Файл docker-compose-production.yml корректен. Продолжаем деплой."
              echo "Pulling Docker images..."
              docker-compose -f docker-compose-production.yml pull
              echo "Stopping old containers..."
              docker-compose -f docker-compose-production.yml down
              echo "Starting new containers..."
              docker-compose -f docker-compose-production.yml up -d
              echo "Checking container status..."
              docker-compose -f docker-compose-production.yml ps
              cd /home/deploy/apps
              rm -f site
              ln -sr $DEPLOY_DIR site
            else
              echo "Файл docker-compose-production.yml некорректен. Деплой не может быть выполнен."
              exit 1
            fi