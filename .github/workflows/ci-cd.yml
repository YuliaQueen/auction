name: CI/CD

on:
  push:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      # ... (ваши шаги для сборки и push Docker образов)

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        env:
          GH_PAT: ${{ secrets.PAT }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          envs: GH_PAT
          script: |
            IMAGE_TAG="${GITHUB_REF##*/}-${{ github.run_number }}"
            LOWERCASE_IMAGE_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
            DEPLOY_DIR="/home/deploy/apps/site_${{ github.run_number }}"
            mkdir -p $DEPLOY_DIR
            cd $DEPLOY_DIR
            echo "COMPOSE_PROJECT_NAME=auction" >> .env
            echo "REGISTRY=${{ env.REGISTRY }}/${LOWERCASE_IMAGE_NAME}" >> .env
            echo "IMAGE_TAG=${IMAGE_TAG}" >> .env
            
            echo "Попытка получить содержимое файла через GitHub API..."
            curl -H "Authorization: token $GH_PAT" \
                 -H "Accept: application/vnd.github.v3.raw" \
                 -o docker-compose-production.yml \
                 -L "https://api.github.com/repos/${{ github.repository }}/contents/docker-compose-production.yml"
            
            if [ $? -eq 0 ] && [ -s docker-compose-production.yml ]; then
              echo "docker-compose-production.yml успешно получен"
              echo "Содержимое файла docker-compose-production.yml:"
              cat docker-compose-production.yml
            else
              echo "Ошибка при получении docker-compose-production.yml. Проверьте наличие файла в репозитории и права доступа."
              echo "Содержимое полученного файла:"
              cat docker-compose-production.yml
              echo "Статус выполнения curl: $?"
              curl -I -H "Authorization: token $GH_PAT" \
                   -H "Accept: application/vnd.github.v3.raw" \
                   "https://api.github.com/repos/${{ github.repository }}/contents/docker-compose-production.yml"
              exit 1
            fi
            
            if docker-compose -f docker-compose-production.yml config > /dev/null 2>&1; then
              echo "Файл docker-compose-production.yml корректен. Продолжаем деплой."
              docker-compose -f docker-compose-production.yml pull
              docker-compose -f docker-compose-production.yml down
              docker-compose -f docker-compose-production.yml up -d
              cd /home/deploy/apps
              rm -f site
              ln -sr $DEPLOY_DIR site
            else
              echo "Файл docker-compose-production.yml некорректен. Деплой не может быть выполнен."
              echo "Содержимое файла docker-compose-production.yml:"
              cat docker-compose-production.yml
              exit 1
            fi